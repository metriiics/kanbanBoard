import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { getProjectsByWorkspace } from "../api/workspaces";
import { useAuth } from "../contexts/AuthContext";
import Sidebar from "./Sidebar"; 

export default function WorkspaceHome() {
  const { user } = useAuth();
  const [recentProjects, setRecentProjects] = useState([]);
  const [tasks, setTasks] = useState([]);
  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false);

  useEffect(() => {
    // –ó–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
    const fetchProjects = async () => {
      try {
        const workspaceId = 1; // –≤—Ä–µ–º–µ–Ω–Ω–æ, –ø–æ–∑–∂–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ user/workspace
        const data = await getProjectsByWorkspace(workspaceId);
        setRecentProjects(data);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:", error);
      }
    };

    fetchProjects();

    // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –∑–∞–¥–∞—á
    setTasks([
      {
        id: 1,
        title: "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å API",
        author: "Dmitro Sckrinik",
        status: "–í –ø—Ä–æ—Ü–µ—Å—Å–µ",
        created: "2025-10-18",
        deadline: "2025-10-25",
        project: "CRM-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞",
      },
      {
        id: 2,
        title: "–°–¥–µ–ª–∞—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω",
        author: "Alexsey Go Pro",
        status: "–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ",
        created: "2025-10-15",
        deadline: "2025-10-23",
        project: "UI-—Ä–µ–¥–∏–∑–∞–π–Ω",
      },
      {
        id: 3,
        title: "–ü–æ–¥–∫–ª—é—á–∏—Ç—å WebSocket",
        author: "Angel",
        status: "–ì–æ—Ç–æ–≤–æ",
        created: "2025-10-10",
        deadline: "2025-10-20",
        project: "KanbanBoard",
      },
    ]);
  }, []);

  return (
    <div className="kanban-board-with-sidebar">
      {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
      <Sidebar
        isCollapsed={isSidebarCollapsed}
        onToggle={() => setIsSidebarCollapsed(!isSidebarCollapsed)}
      />

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div
        className={`board-content ${
          isSidebarCollapsed ? "sidebar-collapsed" : ""
        }`}
      >
        <div className="workspace-home">
          <header className="workspace-header">
            <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.first_name || user?.username} üëã</h1>
            <p>–í–æ—Ç –≤–∞—à–∏ –Ω–µ–¥–∞–≤–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏.</p>
          </header>

          {/* –ù–µ–¥–∞–≤–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã */}
          <section className="recent-projects">
            <h2>–ù–µ–¥–∞–≤–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã</h2>
            <div className="projects-grid">
              {recentProjects.length > 0 ? (
                recentProjects.map((project) => (
                  <Link
                    to={`/project/${project.id}/board`}
                    className="project-card"
                    key={project.id}
                  >
                    <h3>{project.name}</h3>
                    <p>{project.description || "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"}</p>
                  </Link>
                ))
              ) : (
                <p>–ù–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ üòï</p>
              )}
            </div>
          </section>

          {/* –ú–æ–∏ –∑–∞–¥–∞—á–∏ */}
          <section className="my-tasks">
            <h2>–ú–æ–∏ –∑–∞–¥–∞—á–∏</h2>
            <table className="tasks-table">
              <thead>
                <tr>
                  <th>–ó–∞–¥–∞—á–∞</th>
                  <th>–ê–≤—Ç–æ—Ä</th>
                  <th>–°—Ç–∞—Ç—É—Å</th>
                  <th>–°–æ–∑–¥–∞–Ω–æ</th>
                  <th>–î–µ–¥–ª–∞–π–Ω</th>
                  <th>–ü—Ä–æ–µ–∫—Ç</th>
                </tr>
              </thead>
              <tbody>
                {tasks.map((task) => (
                  <tr key={task.id}>
                    <td>{task.title}</td>
                    <td>{task.author}</td>
                    <td>
                      <span
                        className={`status-badge ${task.status
                          .toLowerCase()
                          .replace(/\s/g, "-")}`}
                      >
                        {task.status}
                      </span>
                    </td>
                    <td>{task.created}</td>
                    <td>{task.deadline}</td>
                    <td>{task.project}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </section>
        </div>
      </div>
    </div>
  );
}
